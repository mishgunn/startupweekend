{"version":3,"sources":["scripts/app-caffdd41be.js"],"names":["angular","module","viewerToolFactory","$log","coreService","loadViewerToolParams","context","info","toJson","getData","getServiceUrl","getViewerSessionToken","$inject","factory","viewerToolCtrl","directive","restrict","scope","templateUrl","controller","controllerAs","bindToController","ViewerToolController","localStorageService","$stateParams","$scope","$translate","toastr","$controller","$compile","getViewerAccessParams","caseItem","vm","getItem","visitId","id","initViewerTool","event","result","JSON","stringify","access","toolAccess","toolParams","requestFailure","error","instant","useViewingToken","token","openViewerWithToken","lRemoteViwerWnd","element","document","getElementById","remove","viewerType","type","clonedElement","load","lBody","contents","find","html","e","message","messageType","indexOf","append","this","extend","$on","signFactory","getProjects","SignController","$state","patientFactory","loadProjects","projects","selectProject","project","set","go","startVisit","casesFactory","getCases","requestRemoveCase","swal","title","showCancelButton","text","confirmButtonText","cancelButtonText","removeCase","caseId","deleteData","CasesController","manageRemoveFailure","manageRemoveSuccess","success","roleid","protocolId","protid","filter","loadCases","cases","casesList","getStudyCaseLabel","studyCase","patient","code","getStudyCaseDescription","selectCase","tool","case","changeProject","projectsFactory","ProjectsController","labels","series","data","payerFactory","getStats","PayerController","loadStats","stats","selectStat","stat","PatientController","formsFactory","$rootScope","getForm","submitForm","postFormData","FormsController","$sce","goBackToCases","manageFormSubmitFailure","manageFormSubmitSuccess","formId","updated","modelValue","form","loadForm","formDataStr","formData","eval","schema","model","onSubmit","$broadcast","$valid","step","getCaseTitle","changeCase","doctorFactory","FamilyController","DoctorController","header","footer","languageSelector","MainController","$timeout","accessFactory","goOut","changeLanguage","key","use","isSelectedLanguage","getUserName","user","getUser","name","updatePassword","isDataLoading","signOut","commonConfig","applicationConfigs","router","default","startUpState","srvRoot","services","auth","login","lostLogin","lostPassword","forms","formElements","caseDelete","viewer","viewerToken","formsPost","config","run","$templateCache","put"],"mappings":"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","file":"scripts/app-caffdd41be.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module(\"viewer-tool\", []);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module(\"viewer-tool\").factory(\"viewerToolFactory\", viewerToolFactory);\n\n  function viewerToolFactory($log, coreService) {\n    return {\n      loadViewerToolParams: loadViewerToolParams,\n      getViewerSessionToken: getViewerSessionToken\n    }\n\n    function loadViewerToolParams(context) {\n      $log.info(\"Get viewer tool configs for context \" + angular.toJson(context));\n      return coreService.getData(coreService.getServiceUrl('viewer', context), \"viewerAccessParamsLoadSuccess\", \"viewerAccessParamsLoadFailure\");\n    }\n\n    function getViewerSessionToken(context){\n      $log.info(\"Get viewer session token for context \" + angular.toJson(context));\n      return coreService.getData(coreService.getServiceUrl('viewerToken', context), \"viewerTokenLoadSuccess\", \"viewerTokenLoadFailure\");\n    }\n  }\n})();\n\n(function(){\n  'use strict';\n\n  angular.module(\"viewer-tool\").directive(\"viewerToolCtrl\", viewerToolCtrl);\n\n  function viewerToolCtrl(){\n    var directive = {\n      restrict: 'E',\n      scope: {},\n      templateUrl: 'app/modules/viewer/viewer.tool.tpl.html',\n      controller: 'ViewerToolController',\n      controllerAs: 'ctrl',\n      bindToController: true\n    };\n\n    return directive;\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n\n  angular.module(\"viewer-tool\").controller('ViewerToolController', ViewerToolController);\n\n  function ViewerToolController($log, localStorageService, $stateParams, $scope, $translate, toastr, viewerToolFactory, $controller, $compile, coreService) {\n\n    var vm = this;\n    angular.extend(vm, $controller('CoreController', {\n      $log: $log,\n      $stateParams: $stateParams,\n      localStorageService: localStorageService\n    }));\n\n    vm.getViewerSessionToken = getViewerSessionToken;\n    vm.openViewerWithToken = openViewerWithToken;\n\n    $scope.$on(\"formLoadSuccess\", getViewerAccessParams);\n\n    $scope.$on(\"viewerAccessParamsLoadSuccess\", initViewerTool);\n    $scope.$on(\"viewerAccessParamsLoadFailure\", requestFailure);\n\n\n    $scope.$on(\"viewerTokenLoadSuccess\", useViewingToken);\n    $scope.$on(\"viewerTokenLoadFailure\", requestFailure);\n\n    function getViewerAccessParams() {\n      $log.info(\"Loading viewer access params\");\n      var caseItem = vm.getItem('case');\n      var context = {};\n      context.visitId = caseItem.id;\n\n      viewerToolFactory.loadViewerToolParams(context);\n    }\n\n    function initViewerTool(event, result) {\n      $log.info(\"The viewer tool parameters are successfully loaded \" + JSON.stringify(result));\n      if (result && result.access === true) {\n        vm.toolAccess = true;\n        vm.toolParams = result;\n      }\n    }\n\n    function requestFailure(event, result) {\n      toastr.error($translate.instant('viewerTool.serverRequestFailure'));\n\n    }\n\n    function getViewerSessionToken() {\n      $log.info(\"Getting token for the viewing session\");\n      var caseItem = vm.getItem('case');\n      viewerToolFactory.getViewerSessionToken({\n        \"visitId\": caseItem.id\n      });\n\n    }\n\n    function useViewingToken(event, result) {\n\n      if (result && result.token) {\n        $log.info(\"Token is loaded (\" + result.token + \"). Can open the viewer now\");\n        openViewerWithToken(result.token);\n      }\n    }\n\n    function openViewerWithToken(token) {\n\n      var lRemoteViwerWnd = angular.element(document.getElementById('remoteViewerWnd'));\n      if (lRemoteViwerWnd)\n        lRemoteViwerWnd.remove();\n\n      var caseItem = vm.getItem('case');\n      var context = {};\n      context.visitId = caseItem.id;\n      context.token = token;\n      context.viewerType = vm.toolParams.type;\n      \n      $compile('<iframe id=\"remoteViewerWnd\" src=\"'+coreService.getServiceUrl('viewerOpen', context)+'\" width=\"0%\"height=\"0%\"></iframe>')($scope, function(clonedElement, scope){\n        clonedElement.load(function($scope){\n\n          var lBody = \"\";\n          try{\n            lBody = angular.element(document.getElementById('remoteViewerWnd')).contents().find('body').html();\n          }catch (e){\n\n          }\n          var message = \"\";\n          var messageType = 'error';\n          if (lBody.indexOf(\"no_free_server\")>-1) {\n            message = $translate.instant(\"viewerTool.notifications.noFreeServer\");\n          } else if (lBody.indexOf(\"no_free_user\")>-1) {\n            message = $translate.instant(\"viewerTool.notifications.noFreeUser\");\n          }else {\n            message = $translate.instant(\"viewerTool.notifications.success\");\n            messageType = 'success';\n          }\n          if(message !== \"\")\n            toastr[messageType](message);\n\n        })\n        angular.element(document.getElementById('viewer-tool-playground')).append(clonedElement);\n      });\n\n//angular.element(document.getElementById('application')).append('<iframe id=\"remoteViewerWnd\" src=\"'+coreService.getServiceUrl('viewerOpen', context)+'\" width=\"0%\"height=\"0%\"></iframe>');\n    }\n\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  /**\n   * careGoals module init\n   */\n  angular\n    .module('careGoals', ['ims.framework', 'signature', 'timer', 'chart.js', 'hSweetAlert','ui.bootstrap-slider'\n    , 'ims.auth'\n    ]);\n\n})();\n\n(function(){\n  'use strict'\n\n  angular.module(\"careGoals\").factory(\"signFactory\", signFactory);\n\n  /**\n   * Factory offering projects collection capabilities\n   * @param  {[type]} $log        [description]\n   * @param  {[type]} services    [description]\n   * @param  {[type]} coreService [description]\n   * @return {[type]}             [description]\n   */\n  function signFactory($log, coreService){\n    return{\n      getProjects : getProjects\n    }\n\n    /**\n     * Load projects for the provided context from the configured server\n     * @param  {object} context Context of the projects loading\n     * @return {[type]}         [description]\n     */\n    function getProjects(context){\n      $log.info(\"Get projects from projects srv for context \" + angular.toJson(context));\n      return coreService.getData(coreService.getServiceUrl('projects', context), \"projectsLoadSuccess\", \"projectsLoadFailure\")\n\n    }\n\n\n  }\n})();\n\n(function() {\n  'use strict'\n\n  angular.module(\"careGoals\").controller(\"SignController\", SignController);\n  /**\n   * Controller providing projects (aka subProjects) business\n   *\n   * TODO Shall be generalised\n   *\n   * @param {[type]} $log                [description]\n   * @param {[type]} $state              [description]\n   * @param {[type]} $scope              [description]\n   * @param {[type]} localStorageService [description]\n   * @param {[type]} patientFactory     [description]\n   */\n  function SignController($log, $state, $scope, localStorageService, signFactory) {\n    var vm = this;\n    vm.loadProjects = loadProjects;\n    vm.selectProject = selectProject;\n    vm.startVisit = startVisit;\n\n    $scope.$on(\"$stateChangeSuccess\", getProjects);\n    $scope.$on(\"projectsLoadSuccess\", loadProjects);\n\n    /**\n     * Call patientFactory in order to retrieve projects to display\n     * @return {[type]} [description]\n     */\n    function getProjects() {\n      return patientFactory.getProjects();\n    }\n\n    /**\n     * Load projects in the controller\n     * @param  {event} event    Occured event\n     * @param  {List} projects Loaded projects\n     * @return {List}          Loaded projects\n     */\n    function loadProjects(event, projects) {\n      vm.projects = projects;\n      return projects;\n    }\n\n    /**\n     * Perform project selection business\n     *\n     * @param  {[type]} project [description]\n     * @return {[type]}         [description]\n     */\n    function selectProject(project) {\n      $log.info(\"Project is selected \" + angular.toJson(project));\n      localStorageService.set(\"project\", project)\n      $state.go(\"cases\", {\n        \"project\": project\n      });\n    }\n\n    function startVisit(){\n\n\n\n\n    }\n    startVisit();\n  }\n\n})();\n\n(function() {\n  'use strict'\n  angular.module('careGoals').factory('casesFactory', casesFactory);\n\n  /**\n   * Factory offering cases loading capabilities\n   *\n   * TODO refactoring: actually the projectsFactory is almost the same thing\n   *\n   * @param  {[type]} $log        [description]\n   * @param  {[type]} services    [description]\n   * @param  {[type]} coreService [description]\n   * @return {[type]}             [description]\n   */\n  function casesFactory($log, coreService, $translate) {\n\n    return {\n      getCases: getCases,\n      requestRemoveCase: requestRemoveCase\n    }\n\n    /**\n     * Get cases for the provided context using configured service\n     * @param  {[type]} context [description]\n     * @return {[type]}         [description]\n     */\n    function getCases(context) {\n      $log.info(\"Get cases from cases srv for context \" + angular.toJson(context));\n      return coreService.getData(coreService.getServiceUrl('cases', context), \"casesLoadSuccess\", \"casesLoadFailure\")\n    }\n\n    function requestRemoveCase(context) {\n      swal({\n        title: $translate.instant(\"cases.delete.confirmation.title\"),\n        showCancelButton: true,\n        text: $translate.instant(\"cases.delete.confirmation.message\"),\n        confirmButtonText: $translate.instant(\"cases.delete.confirmation.validate\"),\n        cancelButtonText: $translate.instant(\"cases.delete.confirmation.cancel\")\n      }, function(){removeCase(context)});\n    }\n\n    function removeCase(caseItem){\n        if(caseItem.id)\n          caseItem.caseId = caseItem.id;\n\n        $log.info(\"Remove case using context \" + angular.toJson(caseItem));\n        return coreService.deleteData(coreService.getServiceUrl('caseDelete', caseItem), \"caseRemoveSuccess\", \"caseRemoveFailure\")\n\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('careGoals').controller('CasesController', CasesController);\n\n  /**\n   * Cases managing controller\n   * @param {[type]} $log                [description]\n   * @param {[type]} $scope              [description]\n   * @param {[type]} $controller         [description]\n   * @param {[type]} $state              [description]\n   * @param {[type]} $stateParams        [description]\n   * @param {[type]} localStorageService [description]\n   * @param {[type]} casesFactory        [description]\n   */\n  function CasesController($log, $scope, $controller, $state, $translate, $stateParams, localStorageService, casesFactory, toastr) {\n    var vm = this;\n\n    angular.extend(vm, $controller('CoreController', {\n      $log: $log,\n      $stateParams: $stateParams,\n      localStorageService: localStorageService\n    }));\n\n\n    vm.loadCases = loadCases;\n    vm.selectCase = selectCase;\n    vm.removeCase = removeCase;\n    vm.changeProject = changeProject;\n    vm.getStudyCaseLabel = getStudyCaseLabel;\n    vm.getStudyCaseDescription = getStudyCaseDescription;\n\n    $scope.$on(\"$stateChangeSuccess\", getCases);\n    $scope.$on(\"casesLoadSuccess\", loadCases);\n    $scope.$on(\"caseRemoveSuccess\", manageRemoveSuccess);\n    $scope.$on(\"caseRemoveFailure\", manageRemoveFailure);\n\n\n    function manageRemoveFailure(event, result) {\n      toastr.error($translate.instant('cases.failedRemove'));\n    }\n\n    function manageRemoveSuccess(event, result) {\n      toastr.success($translate.instant('cases.successRemove'));\n      getCases();\n    }\n\n    /**\n     * Get cases from factory\n     * @return {[type]} [description]\n     */\n    function getCases() {\n      var context = {};\n      context.roleid = 1;\n      var project = vm.getItem('project');\n\n      if (project && project.protocolId)\n        context.protid = project.protocolId;\n      else\n        context.protid = 1;\n\n      context.filter = 1;\n\n      return casesFactory.getCases(context);\n    }\n\n    /**\n     * Load cases in the controller\n     * @param  {[type]} event occured event\n     * @param  {[type]} cases loaded cases\n     * @return {[type]}       loaded cases\n     */\n    function loadCases(event, cases) {\n      vm.casesList = cases;\n      return cases;\n    }\n\n    /**\n     * Get the case label for the provided case\n     * @param  {object} studyCase Case to get label for\n     * @return {string}           Case label\n     */\n    function getStudyCaseLabel(studyCase) {\n      if (studyCase) {\n        return studyCase.patient.code + \" / \" + studyCase.code;\n      }\n    }\n\n    function getStudyCaseDescription(studyCase) {\n      return \"\";\n    }\n\n    /**\n     * Perform case selection business\n     * @param  {object} studyCase Selected case\n     * @return {[type]}           [description]\n     */\n    function selectCase(studyCase) {\n      $log.info(\"Select case \" + studyCase);\n      localStorageService.set(\"case\", studyCase);\n      $state.go(\"root\", {\n        \"tool\" : \"forms\",\n        \"case\": studyCase\n      });\n    }\n\n    function changeProject() {\n      $state.go(\"projects\", {\n        \"project\": null\n      });\n    }\n\n    function removeCase(caseItem){\n      casesFactory.requestRemoveCase(caseItem);\n\n    }\n\n  }\n})();\n\n(function(){\n  'use strict'\n\n  angular.module(\"careGoals\").factory(\"projectsFactory\", projectsFactory);\n\n  /**\n   * Factory offering projects collection capabilities\n   * @param  {[type]} $log        [description]\n   * @param  {[type]} services    [description]\n   * @param  {[type]} coreService [description]\n   * @return {[type]}             [description]\n   */\n  function projectsFactory($log, coreService){\n    return{\n      getProjects : getProjects\n    }\n\n    /**\n     * Load projects for the provided context from the configured server\n     * @param  {object} context Context of the projects loading\n     * @return {[type]}         [description]\n     */\n    function getProjects(context){\n      $log.info(\"Get projects from projects srv for context \" + angular.toJson(context));\n      return coreService.getData(coreService.getServiceUrl('projects', context), \"projectsLoadSuccess\", \"projectsLoadFailure\")\n\n    }\n\n\n  }\n})();\n\n(function() {\n  'use strict'\n\n  angular.module(\"careGoals\").controller(\"ProjectsController\", ProjectsController);\n  /**\n   * Controller providing projects (aka subProjects) business\n   *\n   * TODO Shall be generalised\n   *\n   * @param {[type]} $log                [description]\n   * @param {[type]} $state              [description]\n   * @param {[type]} $scope              [description]\n   * @param {[type]} localStorageService [description]\n   * @param {[type]} projectsFactory     [description]\n   */\n  function ProjectsController($log, $state, $scope, localStorageService, projectsFactory) {\n    var vm = this;\n    vm.loadProjects = loadProjects;\n    vm.selectProject = selectProject;\n\n    $scope.$on(\"$stateChangeSuccess\", getProjects);\n    $scope.$on(\"projectsLoadSuccess\", loadProjects);\n    $scope.labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"];\n      $scope.series = ['Series A', 'Series B'];\n      $scope.data = [\n        [65, 59, 80, 81, 56, 55, 40],\n        [28, 48, 40, 19, 86, 27, 90]\n      ];\n    \n    /**\n     * Call projectsFactory in order to retrieve projects to display\n     * @return {[type]} [description]\n     */\n    function getProjects() {\n      return projectsFactory.getProjects();\n    }\n\n    /**\n     * Load projects in the controller\n     * @param  {event} event    Occured event\n     * @param  {List} projects Loaded projects\n     * @return {List}          Loaded projects\n     */\n    function loadProjects(event, projects) {\n      vm.projects = projects;\n      return projects;\n    }\n\n    /**\n     * Perform project selection business\n     *\n     * @param  {[type]} project [description]\n     * @return {[type]}         [description]\n     */\n    function selectProject(project) {\n      $log.info(\"Project is selected \" + angular.toJson(project));\n      localStorageService.set(\"project\", project)\n      $state.go(\"cases\", {\n        \"project\": project\n      });\n    }\n  }\n\n})();\n\n(function(){\n  'use strict'\n\n  angular.module(\"careGoals\").factory(\"payerFactory\", payerFactory);\n\n  /**\n   * Factory offering stats collection capabilities\n   * @param  {[type]} $log        [description]\n   * @param  {[type]} services    [description]\n   * @param  {[type]} coreService [description]\n   * @return {[type]}             [description]\n   */\n  function payerFactory($log, coreService){\n    return{\n      getStats : getStats\n    }\n\n    /**\n     * Load stats for the provided context from the configured server\n     * @param  {object} context Context of the stats loading\n     * @return {[type]}         [description]\n     */\n    function getStats(context){\n      $log.info(\"Get stats from stats srv for context \" + angular.toJson(context));\n      return coreService.getData(coreService.getServiceUrl('stats', context), \"statsLoadSuccess\", \"statsLoadFailure\")\n\n    }\n\n\n  }\n})();\n\n(function() {\n  'use strict'\n\n  angular.module(\"careGoals\").controller(\"PayerController\", PayerController);\n  /**\n   * Controller providing stats (aka subStats) business\n   *\n   * TODO Shall be generalised\n   *\n   * @param {[type]} $log                [description]\n   * @param {[type]} $state              [description]\n   * @param {[type]} $scope              [description]\n   * @param {[type]} localStorageService [description]\n   * @param {[type]} statsFactory     [description]\n   */\n  function PayerController($log, $state, $scope, localStorageService, payerFactory) {\n    var vm = this;\n    vm.loadStats = loadStats;\n    vm.selectStat = selectStat;\n\n    $scope.$on(\"$stateChangeSuccess\", getStats);\n    $scope.$on(\"statsLoadSuccess\", loadStats);\n\n    /**\n     * Call statsFactory in order to retrieve stats to display\n     * @return {[type]} [description]\n     */\n    function getStats() {\n      return payerFactory.getStats();\n    }\n\n    /**\n     * Load stats in the controller\n     * @param  {event} event    Occured event\n     * @param  {List} stats Loaded stats\n     * @return {List}          Loaded stats\n     */\n    function loadStats(event, stats) {\n      vm.stats = stats;\n      return stats;\n    }\n\n    /**\n     * Perform stat selection business\n     *\n     * @param  {[type]} stat [description]\n     * @return {[type]}         [description]\n     */\n    function selectStat(stat) {\n      $log.info(\"Stat is selected \" + angular.toJson(stat));\n      localStorageService.set(\"stat\", stat)\n\n    }\n  }\n\n})();\n\n(function(){\n  'use strict'\n\n  angular.module(\"careGoals\").factory(\"patientFactory\", patientFactory);\n\n  /**\n   * Factory offering projects collection capabilities\n   * @param  {[type]} $log        [description]\n   * @param  {[type]} services    [description]\n   * @param  {[type]} coreService [description]\n   * @return {[type]}             [description]\n   */\n  function patientFactory($log, coreService){\n    return{\n      getProjects : getProjects\n    }\n\n    /**\n     * Load projects for the provided context from the configured server\n     * @param  {object} context Context of the projects loading\n     * @return {[type]}         [description]\n     */\n    function getProjects(context){\n      $log.info(\"Get projects from projects srv for context \" + angular.toJson(context));\n      return coreService.getData(coreService.getServiceUrl('projects', context), \"projectsLoadSuccess\", \"projectsLoadFailure\")\n\n    }\n\n\n  }\n})();\n\n(function() {\n  'use strict'\n\n  angular.module(\"careGoals\").controller(\"PatientController\", PatientController);\n  /**\n   * Controller providing projects (aka subProjects) business\n   *\n   * TODO Shall be generalised\n   *\n   * @param {[type]} $log                [description]\n   * @param {[type]} $state              [description]\n   * @param {[type]} $scope              [description]\n   * @param {[type]} localStorageService [description]\n   * @param {[type]} patientFactory     [description]\n   */\n  function PatientController($log, $state, $scope, localStorageService, patientFactory) {\n    var vm = this;\n    vm.loadProjects = loadProjects;\n    vm.selectProject = selectProject;\n    vm.startVisit = startVisit;\n\n    $scope.$on(\"$stateChangeSuccess\", getProjects);\n    $scope.$on(\"projectsLoadSuccess\", loadProjects);\n\n    /**\n     * Call patientFactory in order to retrieve projects to display\n     * @return {[type]} [description]\n     */\n    function getProjects() {\n      return patientFactory.getProjects();\n    }\n\n    /**\n     * Load projects in the controller\n     * @param  {event} event    Occured event\n     * @param  {List} projects Loaded projects\n     * @return {List}          Loaded projects\n     */\n    function loadProjects(event, projects) {\n      vm.projects = projects;\n      return projects;\n    }\n\n    /**\n     * Perform project selection business\n     *\n     * @param  {[type]} project [description]\n     * @return {[type]}         [description]\n     */\n    function selectProject(project) {\n      $log.info(\"Project is selected \" + angular.toJson(project));\n      localStorageService.set(\"project\", project)\n      $state.go(\"cases\", {\n        \"project\": project\n      });\n    }\n\n    function startVisit(){\n\n      \n\n\n    }\n    startVisit();\n  }\n\n})();\n\n(function() {\n  'use strict'\n  angular.module('careGoals').factory('formsFactory', formsFactory);\n\n  function formsFactory($log, $rootScope, coreService) {\n\n    return {\n      getForm: getForm,\n      submitForm: submitForm\n    }\n\n    function getFormFieldsDummy() {\n      $log.info(\"Get dummy forms\");\n    }\n\n    function getForm(context) {\n\n      $log.info(\"Get forms from service \");\n\n      coreService.getData(coreService.getServiceUrl('formElements', context), \"formLoadSuccess\", \"formLoadFailure\");\n    }\n\n    function getFormFields(context) {\n      $log.info(\"Get forms from service forms srv for context \" + angular.toJson(context));\n    }\n\n    function submitForm(data, context) {\n      $log.info(\"Submit form to server \" + data);\n      coreService.postFormData(coreService.getServiceUrl('formsPost', context), data, \"formSubmitSuccess\", \"formSubmitFailure\");\n    }\n\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('careGoals').controller('FormsController', FormsController);\n\n  function FormsController($log, $controller, $sce, $scope, $rootScope, $state, $stateParams, localStorageService, formsFactory, casesFactory, toastr, $translate) {\n\n    var vm = this;\n    angular.extend(vm, $controller('CoreController', {\n      $log: $log,\n      $stateParams: $stateParams,\n      localStorageService: localStorageService\n    }));\n\n    vm.onSubmit = onSubmit;\n    vm.updated = updated;\n    vm.removeCase = removeCase;\n    vm.changeCase = changeCase;\n    vm.getCaseTitle = getCaseTitle;\n    vm.changeProject = changeProject;\n    vm.removeCase = removeCase;\n\n    $scope.updated = updated;\n\n    $scope.$on(\"$stateChangeSuccess\", getForm);\n    $scope.$on(\"formLoadSuccess\", loadForm);\n    $scope.$on(\"formSubmitSuccess\", manageFormSubmitSuccess);\n    $scope.$on(\"formSubmitFailure\", manageFormSubmitFailure);\n    $scope.$on(\"caseRemoveSuccess\", manageRemoveSuccess);\n    $scope.$on(\"caseRemoveFailure\", manageRemoveFailure);\n\n\n\n    function goBackToCases(event, result) {\n      $state.go(\"cases\", {\n        \"project\": $stateParams.project\n      });\n    }\n\n    function removeCase() {\n      var caseItem = vm.getItem('case');\n      casesFactory.requestRemoveCase(caseItem);\n    }\n\n    function manageFormSubmitFailure(event, result) {\n      toastr.error($translate.instant('forms.failedSubmit'));\n    }\n\n    function manageFormSubmitSuccess(event, result) {\n      toastr.success($translate.instant('forms.successfulSubmit'));\n      goBackToCases();\n    }\n\n    function manageRemoveSuccess(event, result) {\n      toastr.success($translate.instant('cases.successRemove'));\n      goBackToCases();\n    }\n\n    function manageRemoveFailure(event, result) {\n      toastr.error($translate.instant('cases.failedRemove'));\n    }\n\n    function getForm() {\n      var context = {};\n      var project = vm.getItem('project');\n      if (project)\n        context.formId = project.formId;\n\n      formsFactory.getForm(context);\n    }\n\n    function updated(modelValue, form) {\n    }\n\n    function loadForm(event, formDataStr) {\n      var formData = eval(\"(\"+formDataStr+\")\");\n      vm.schema = formData.schema;\n      vm.form = formData.form;\n      vm.model = formData.model;\n      return formData;\n    }\n\n    function onSubmit(form) {\n      // First we broadcast an event so all fields validate themselves\n      $rootScope.$broadcast('schemaFormValidate');\n      $log.info(\"submitting form\")\n        // Then we check if the form is valid\n      if (form.$valid) {\n\n        var context = {};\n        var caseItem = vm.getItem('case');\n        if (caseItem)\n          context.caseId = caseItem.id;\n\n\n        context.roleid = 1;\n        context.step = \"form\"\n        $log.info(\"Doing stuff with validated form\")\n        swal({\n          title: $translate.instant(\"forms.confirmation.title\"),\n          showCancelButton: true,\n          text: $translate.instant(\"forms.confirmation.message\"),\n          confirmButtonText: $translate.instant(\"forms.confirmation.validate\"),\n          cancelButtonText: $translate.instant(\"forms.confirmation.cancel\")\n        }, function() {\n          formsFactory.submitForm(vm.model, context)\n        });\n\n      }\n    }\n\n    function getCaseTitle() {\n      var caseItem = vm.getItem('case');\n      return caseItem.patient.code + \" / \" + caseItem.code;\n    }\n\n    function changeCase() {\n      $state.go(\"cases\", {\n        \"case\": null\n      });\n    }\n\n    function changeProject() {\n      $state.go(\"projects\", {\n        \"project\": null\n      });\n    }\n  }\n})();\n\n(function(){\n  'use strict'\n\n  angular.module(\"careGoals\").factory(\"doctorFactory\", doctorFactory);\n\n  /**\n   * Factory offering projects collection capabilities\n   * @param  {[type]} $log        [description]\n   * @param  {[type]} services    [description]\n   * @param  {[type]} coreService [description]\n   * @return {[type]}             [description]\n   */\n  function doctorFactory($log, coreService){\n    return{\n      getProjects : getProjects\n    }\n\n    /**\n     * Load projects for the provided context from the configured server\n     * @param  {object} context Context of the projects loading\n     * @return {[type]}         [description]\n     */\n    function getProjects(context){\n      $log.info(\"Get projects from projects srv for context \" + angular.toJson(context));\n      return coreService.getData(coreService.getServiceUrl('projects', context), \"projectsLoadSuccess\", \"projectsLoadFailure\")\n\n    }\n\n\n  }\n})();\n\n(function() {\n  'use strict'\n\n  angular.module(\"careGoals\").controller(\"FamilyController\", FamilyController);\n  /**\n   * Controller providing projects (aka subProjects) business\n   *\n   * TODO Shall be generalised\n   *\n   * @param {[type]} $log                [description]\n   * @param {[type]} $state              [description]\n   * @param {[type]} $scope              [description]\n   * @param {[type]} localStorageService [description]\n   * @param {[type]} projectsFactory     [description]\n   */\n  function FamilyController($log, $state, $scope, localStorageService, projectsFactory) {\n    var vm = this;\n    vm.loadProjects = loadProjects;\n    vm.selectProject = selectProject;\n\n    $scope.$on(\"$stateChangeSuccess\", getProjects);\n    $scope.$on(\"projectsLoadSuccess\", loadProjects);\n\n    /**\n     * Call projectsFactory in order to retrieve projects to display\n     * @return {[type]} [description]\n     */\n    function getProjects() {\n      return projectsFactory.getProjects();\n    }\n\n    /**\n     * Load projects in the controller\n     * @param  {event} event    Occured event\n     * @param  {List} projects Loaded projects\n     * @return {List}          Loaded projects\n     */\n    function loadProjects(event, projects) {\n      vm.projects = projects;\n      return projects;\n    }\n\n    /**\n     * Perform project selection business\n     *\n     * @param  {[type]} project [description]\n     * @return {[type]}         [description]\n     */\n    function selectProject(project) {\n      $log.info(\"Project is selected \" + angular.toJson(project));\n      localStorageService.set(\"project\", project)\n      $state.go(\"cases\", {\n        \"project\": project\n      });\n    }\n  }\n\n})();\n\n(function(){\n  'use strict'\n\n  angular.module(\"careGoals\").factory(\"doctorFactory\", doctorFactory);\n\n  /**\n   * Factory offering projects collection capabilities\n   * @param  {[type]} $log        [description]\n   * @param  {[type]} services    [description]\n   * @param  {[type]} coreService [description]\n   * @return {[type]}             [description]\n   */\n  function doctorFactory($log, coreService){\n    return{\n      getProjects : getProjects\n    }\n\n    /**\n     * Load projects for the provided context from the configured server\n     * @param  {object} context Context of the projects loading\n     * @return {[type]}         [description]\n     */\n    function getProjects(context){\n      $log.info(\"Get projects from projects srv for context \" + angular.toJson(context));\n      return coreService.getData(coreService.getServiceUrl('projects', context), \"projectsLoadSuccess\", \"projectsLoadFailure\")\n\n    }\n\n\n  }\n})();\n\n(function() {\n  'use strict'\n\n  angular.module(\"careGoals\").controller(\"DoctorController\", DoctorController);\n  /**\n   * Controller providing projects (aka subProjects) business\n   *\n   * TODO Shall be generalised\n   *\n   * @param {[type]} $log                [description]\n   * @param {[type]} $state              [description]\n   * @param {[type]} $scope              [description]\n   * @param {[type]} localStorageService [description]\n   * @param {[type]} projectsFactory     [description]\n   */\n  function DoctorController($log, $state, $scope, localStorageService, projectsFactory) {\n    var vm = this;\n    vm.loadProjects = loadProjects;\n    vm.selectProject = selectProject;\n\n    $scope.$on(\"$stateChangeSuccess\", getProjects);\n    $scope.$on(\"projectsLoadSuccess\", loadProjects);\n\n    /**\n     * Call projectsFactory in order to retrieve projects to display\n     * @return {[type]} [description]\n     */\n    function getProjects() {\n      return projectsFactory.getProjects();\n    }\n    $scope.$on(\"$stateChangeSuccess\", getProjects);\n    $scope.$on(\"projectsLoadSuccess\", loadProjects);\n    $scope.labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"];\n      $scope.series = ['Series A'];\n      $scope.data = [\n        [65, 59, 80, 81, 56, 55, 40]\n      ];\n\n    /**\n     * Load projects in the controller\n     * @param  {event} event    Occured event\n     * @param  {List} projects Loaded projects\n     * @return {List}          Loaded projects\n     */\n    function loadProjects(event, projects) {\n      vm.projects = projects;\n      return projects;\n    }\n\n    /**\n     * Perform project selection business\n     *\n     * @param  {[type]} project [description]\n     * @return {[type]}         [description]\n     */\n    function selectProject(project) {\n      $log.info(\"Project is selected \" + angular.toJson(project));\n      localStorageService.set(\"project\", project)\n      $state.go(\"cases\", {\n        \"project\": project\n      });\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('careGoals')\n    .directive('appHeader', header);\n\n  /**\n   * Header Element directive\n   *\n   * @return {[type]} [description]\n   */\n  function header() {\n    var directive = {\n      restrict: 'E',\n      scope: {},\n      templateUrl: 'app/main/header.html',\n      controller: 'MainController',\n      controllerAs: 'main',\n      bindToController: true\n    };\n\n    return directive;\n\n  }\n\n\n  angular\n    .module('ims-victoria')\n    .directive('appFooter', footer);\n\n  /**\n   * Footer element directive\n   *\n   * @return {[type]} [description]\n   */\n  function footer() {\n    var directive = {\n      restrict: 'E',\n      scope: {},\n      templateUrl: 'app/main/footer.html',\n      controller: 'MainController',\n      controllerAs: 'main',\n      bindToController: true\n    };\n\n    return directive;\n  }\n\n\n  angular\n    .module('ims-victoria')\n    .directive('languageSelector', languageSelector);\n\n  /**\n   * Language selector element directive\n   *\n   * @return {[type]} [description]\n   */\n  function languageSelector() {\n    var directive = {\n      restrict: 'E',\n      scope: {},\n      templateUrl: 'app/main/language.selector.html',\n      controller: 'MainController',\n      controllerAs: 'main',\n      bindToController: true\n    };\n\n    return directive;\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('careGoals')\n    .controller('MainController', MainController);\n\n  /**\n   * Main controller providing common application features\n   *\n   * @param {[type]} $timeout      [description]\n   * @param {[type]} $state        [description]\n   * @param {[type]} $scope        [description]\n   * @param {[type]} $translate    [description]\n   * @param {[type]} accessFactory [description]\n   */\n  function MainController($timeout, $state, $scope, $translate, accessFactory, coreService) {\n    var vm = this;\n\n\n    vm.isDataLoading = coreService.isDataLoading;\n    vm.signOut = accessFactory.signOut;\n    vm.getUserName = getUserName;\n    vm.changeLanguage = changeLanguage;\n    vm.updatePassword = updatePassword;\n    vm.isSelectedLanguage = isSelectedLanguage;\n\n    $scope.$on(\"signOut\", goOut);\n\n    /**\n     * Redirect to the auth page using ui-router\n     * @return {[type]} [description]\n     */\n    function goOut() {\n      $state.go(\"auth\")\n    }\n\n    /**\n     * Change language using the provided key\n     * @param  {string} key code of the language to use\n     * @return {[type]}     [description]\n     */\n    function changeLanguage(key) {\n      $translate.use(key);\n    }\n\n    /**\n     * Check if the language is uses\n     * @param  {string}  key language code to check\n     * @return {Boolean}     [description]\n     */\n    function isSelectedLanguage(key) {\n      return key == $translate.use();\n    }\n\n    function getUserName() {\n      var user = accessFactory.getUser();\n      if (user) {\n        return user.name;\n      }\n    }\n\n    function updatePassword(){\n      $state.go(\"pswdupd\");\n    }\n\n  }\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  /**\n   * Set of configs for the front-end application\n   *\n   * TODO probably to be specified elsewhere in more generic and configurable way\n   */\n/*\n  angular\n    .module('ims-victoria')\n    .constant('applicationConfigs', {\n      startUpState: 'projects',\n//      appRoot: \"https://victoria-test.imagys.com\",\n      srvRoot: \"/victoria-imagys/services/\",\n      'services' : {\n        auth: \"api/usermgt/user\",\n        login: \"api/login\",\n        lostLogin: \"api/lostlogin\",\n        lostPassword: \"api/lostpassword\",\n        updatePassword: \"api/usermgt/update\",\n        token: \"api/login\",\n        access: \"api/usermgt/access\",\n        formElements: \"api/v1/forms/%(formId)d/elements\",\n        cases: \"api/v1/visits\",\n        caseDelete: \"api/v1/visits/%(caseId)s\",\n        caseDetails: \"api/v1/visits/%(caseId)s\",\n        projects: \"api/v1/subprojects\",\n        formsPost: \"api/v1/visits/%(caseId)s/%(step)s\",\n        viewer: \"api/v1/viewer/getViewerContext/%(visitId)d\",\n        viewerToken: \"api/v1/viewer/token/%(visitId)d\",\n//        viewerOpen: \"api/v1/viewer/open/visit/%(visitId)d/viewertype/%(viewerType)s\"\n        viewerOpen: \"api/v1/viewer/open/%(visitId)d/%(token)s/%(viewerType)s\"\n      }\n    });\n*/\n/*\n  angular\n    .module('ims-victoria')\n    .constant('applicationConfigs', {\n      startUpState: 'projects',\n      //appRoot: \"http://localhost:3000/\",\n      srvRoot: \"/assets/datasources/\",\n      'services' : {\n        auth: \"auth.json\",\n        login: \"token.json\",\n        lostLogin: \"lostlogin.json\",\n        lostPassword: \"lostpassword.json\",\n        token: \"token.json\",\n        access: \"check.access.json\",\n        forms: \"form.json\",\n        formElements: \"form.json\",\n        cases: \"cases.json\",\n        caseDelete: \"cases.json\",\n        projects: \"projects.json\",\n        viewer: \"viewer.json\",\n        viewerToken: \"viewerToken.json\",\n        formsPost: \"http://localhost\"\n      }\n    });\n\n*/\n\n\n\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('careGoals')\n    .config(commonConfig);\n\n\n  /** @ngInject */\n  function commonConfig(applicationConfigs) {\n    // Configure applicationConfigs\n    applicationConfigs.router = {\n      'default': 'patient'\n    };\n\n\n    applicationConfigs.startUpState = 'projects'\n\n    applicationConfigs.srvRoot = \"/assets/datasources/\";\n    applicationConfigs.services = {\n      auth: \"auth.json\",\n      login: \"auth.json\",\n      lostLogin: \"lostlogin.json\",\n      lostPassword: \"lostpassword.json\",\n      token: \"token.json\",\n      access: \"check.access.json\",\n      forms: \"form.json\",\n      formElements: \"form.json\",\n      cases: \"cases.json\",\n      caseDelete: \"cases.json\",\n      projects: \"projects.json\",\n      stats: \"statistics.json\",\n      viewer: \"viewer.json\",\n      viewerToken: \"viewerToken.json\",\n      formsPost: \"http://localhost\"\n    };\n   /*\n  applicationConfigs.srvRoot = \"/victoria-imagys/services/\";\n  applicationConfigs.services =  {\n        auth: \"api/usermgt/user\",\n        login: \"api/login\",\n        lostLogin: \"api/lostlogin\",\n        lostPassword: \"api/lostpassword\",\n        updatePassword: \"api/usermgt/update\",\n        token: \"api/login\",\n        access: \"api/usermgt/access\",\n        formElements: \"api/v1/forms/%(formId)d/elements\",\n        cases: \"api/v1/visits\",\n        caseDelete: \"api/v1/visits/%(caseId)s\",\n        caseDetails: \"api/v1/visits/%(caseId)s\",\n        projects: \"api/v1/subprojects\",\n        formsPost: \"api/v1/visits/%(caseId)s/%(step)s\",\n        viewer: \"api/v1/viewer/getViewerContext/%(visitId)d\",\n        viewerToken: \"api/v1/viewer/token/%(visitId)d\",\n//        viewerOpen: \"api/v1/viewer/open/visit/%(visitId)d/viewertype/%(viewerType)s\"\n        viewerOpen: \"api/v1/viewer/open/%(visitId)d/%(token)s/%(viewerType)s\"\n      }\n*/\n  }\n\n})();\n\nangular.module(\"careGoals\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/footer.html\",\"<footer class=\\\"footer\\\"><div class=\\\"container\\\"><p>Keosys 2015 &copy;</p></div></footer><div id=\\\"preloaderContainer\\\" data-ng-show=\\\"main.isDataLoading()\\\"><div id=\\\"preloader\\\"><img src=\\\"assets/images/preloader.gif\\\" width=\\\"120px\\\" height=\\\"41px\\\"></div></div>\");\n$templateCache.put(\"app/main/header.html\",\"<nav class=\\\"navbar navbar-default navbar-static-top\\\"><div class=\\\"container\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><a class=\\\"navbar-brand\\\"><img src=\\\"http://www.caregoals.com/wp-content/uploads/2016/01/care_goal_logo_1.png\\\" height=\\\"32px\\\"></a></div><div id=\\\"auth-panel\\\"><div class=\\\"navbar-text navbar-right\\\"><button ng-click=\\\"main.signOut()\\\" type=\\\"button\\\" class=\\\"btn btn-info btn-xs\\\" translate=\\\"authentication.signOut\\\"></button></div><p class=\\\"navbar-text navbar-right authentication-details\\\" translate=\\\"authentication.signedAs\\\" translate-values=\\\"{ name: main.getUserName()}\\\"></p></div></div></div></nav>\");\n$templateCache.put(\"app/main/language.selector.html\",\"<div><button ng-repeat=\\\"lang in [\\'en\\', \\'fr\\']\\\" class=\\\"btn btn-xs\\\" ng-click=\\\"main.changeLanguage(lang)\\\" ng-class=\\\"{\\'btn-primary\\' : main.isSelectedLanguage(lang), \\'btn-default\\' : !main.isSelectedLanguage(lang)}\\\">{{lang | translate}}</button></div>\");\n$templateCache.put(\"app/main/main.html\",\"<app-header></app-header><div class=\\\"jumbotron text-center\\\"><button ui-sref=\\\"projects({\\'type\\' : \\'default\\'})\\\" class=\\\"btn btn-primary\\\">Go to projects list</button></div><app-footer></app-footer>\");\n$templateCache.put(\"app/modules/cases/case.render.html\",\"<div class=\\\"list-group\\\"><a data-ng-repeat=\\\"item in ctrl.casesList | orderBy: [\\'order\\', \\'label\\'] | filter : ctrl.filter\\\" class=\\\"list-group-item\\\"><div class=\\\"case-container\\\" ng-click=\\\"ctrl.selectCase(item)\\\"><h4 class=\\\"list-group-item-heading\\\">{{ctrl.getStudyCaseLabel(item)}}</h4><p class=\\\"list-group-item-text\\\">{{ctrl.getStudyCaseDescription(item)}}</p></div><div class=\\\"btn btn-danger remove-btn\\\" ng-click=\\\"ctrl.removeCase(item)\\\">X</div></a></div>\");\n$templateCache.put(\"app/modules/cases/cases.tpl.html\",\"<app-header></app-header><div id=\\\"casesController\\\" class=\\\"container\\\"><div id=\\\"casesFilter\\\" class=\\\"panel panel-default\\\"><div class=\\\"panel-heading\\\" translate=\\\"cases.selectedProject\\\"></div><div class=\\\"panel-body\\\"><h3>{{ctrl.getItem(\\'project\\').name}} <button class=\\\"btn btn-warning btn-xs\\\" ng-click=\\\"ctrl.changeProject()\\\" translate=\\\"cases.changeProject\\\"></button></h3></div></div><div id=\\\"casesList\\\" class=\\\"panel panel-default\\\"><div class=\\\"panel-heading\\\" translate=\\\"cases.title\\\"></div><div class=\\\"input-group panel-body\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{\\'cases.search\\' | translate}}\\\" name=\\\"casesFilterField\\\" id=\\\"casesFilterField\\\" ng-model=\\\"ctrl.filter\\\"><div class=\\\"input-group-btn\\\"><button class=\\\"btn btn-default\\\" type=\\\"submit\\\"><i class=\\\"glyphicon glyphicon-search\\\"></i></button></div></div><div data-ng-include=\\\"\\'app/modules/cases/case.render.html\\'\\\"></div></div></div><app-footer></app-footer>\");\n$templateCache.put(\"app/modules/doctor/doctor.tpl.html\",\"<app-header></app-header><div class=\\\"container\\\"><div id=\\\"projectsList\\\" class=\\\"panel panel-default col-sm-12\\\"><h2>Today is April 10th 2016</h2></div><div id=\\\"projectsList\\\" class=\\\"panel panel-default col-sm-6\\\"><div class=\\\"panel-heading\\\">Scheduled visit</div><div class=\\\"panel-body\\\"><ul class=\\\"nav nav-pills nav-stacked\\\"><li role=\\\"presentation\\\" data-ng-repeat=\\\"item in ctrl.projects | orderBy: [\\'order\\', \\'name\\']\\\"><a class=\\\"btn btn-default btn-lg\\\" data-ng-click=\\\"ctrl.selectProject(item)\\\" role=\\\"button\\\">{{item.name}}</a></li></ul></div></div><div id=\\\"id2\\\" class=\\\"panel panel-default col-sm-6\\\"><div class=\\\"panel-heading\\\">Overall patient flow</div><div class=\\\"panel-body\\\"><canvas id=\\\"line\\\" class=\\\"chart chart-line\\\" chart-data=\\\"data\\\" chart-labels=\\\"labels\\\" chart-legend=\\\"true\\\" chart-series=\\\"series\\\"></canvas></div></div><div id=\\\"id1\\\" class=\\\"panel panel-default col-sm-6\\\"><div class=\\\"panel-heading\\\">Ongoing visits</div><div class=\\\"panel-body\\\"><div><h4>Mr. David Jones</h4></div><div class=\\\"progress\\\"><div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"60\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width: 60%;\\\">60%</div></div></div></div><div id=\\\"id2\\\" class=\\\"panel panel-default col-sm-6\\\"><div class=\\\"panel-heading\\\">Patients queries</div><div class=\\\"panel-body\\\"><div><h4>Mrs. Amber Green <span class=\\\"badge\\\">1</span></h4></div><div><h4>Mr. Jonathan Little <span class=\\\"badge\\\">2</span></h4></div></div></div></div><app-footer></app-footer>\");\n$templateCache.put(\"app/modules/forms/forms.tpl.html\",\"<app-header></app-header><div class=\\\"container\\\"><div class=\\\"panel panel-default\\\"><div class=\\\"panel-heading\\\" translate=\\\"forms.selectedProject\\\"></div><div class=\\\"panel-body\\\"><h3>{{ctrl.getItem(\\'project\\').name}} <button class=\\\"btn btn-warning btn-xs\\\" ng-click=\\\"ctrl.changeProject()\\\" translate=\\\"forms.changeProject\\\"></button></h3></div></div><div class=\\\"panel panel-default\\\"><div class=\\\"panel-heading\\\" translate=\\\"forms.selectedCase\\\"></div><div class=\\\"panel-body\\\"><h4>{{ctrl.getCaseTitle()}} <button class=\\\"btn btn-warning btn-xs\\\" ng-click=\\\"ctrl.changeCase()\\\" translate=\\\"forms.changeCase\\\"></button></h4></div></div><div id=\\\"formView\\\"><form name=\\\"caseForm\\\" sf-schema=\\\"ctrl.schema\\\" sf-form=\\\"ctrl.form\\\" sf-model=\\\"ctrl.model\\\" ng-submit=\\\"ctrl.onSubmit(caseForm)\\\"></form></div><div class=\\\"case-control\\\"><button class=\\\"btn btn-warning btn-xs\\\" ng-click=\\\"ctrl.changeCase()\\\" translate=\\\"forms.chooseOtherCase\\\"></button> <button class=\\\"btn btn-danger btn-xs\\\" ng-click=\\\"ctrl.removeCase()\\\" translate=\\\"forms.removeCase\\\"></button></div></div><viewer-tool-ctrl></viewer-tool-ctrl><app-footer></app-footer>\");\n$templateCache.put(\"app/modules/patient/patient.tpl.html\",\"<app-header></app-header><div class=\\\"container\\\" ng-init=\\\"vm.startVisit()\\\"><div class=\\\"panel panel-default\\\"><div class=\\\"col-xs-6 col-sm-4 highlight\\\"><img src=\\\"assets/images/book.png\\\" class=\\\"img-responsive center-block\\\"><h2 class=\\\"text-center\\\">Learning</h2></div><div class=\\\"col-xs-6 col-sm-4 highlight\\\"><img src=\\\"assets/images/business.png\\\" class=\\\"img-responsive center-block\\\"><h2 class=\\\"text-center\\\">Validating</h2></div><a ui-sref=\\\"sign\\\"><div class=\\\"col-xs-6 col-sm-4 highlight\\\" ng-click=\\\"\\\"><img src=\\\"assets/images/man.png\\\" class=\\\"img-responsive center-block\\\"><h2 class=\\\"text-center\\\">Making decision</h2></div></a></div><div id=\\\"visit\\\" class=\\\"panel panel-default\\\"><button type=\\\"button\\\" class=\\\"btn btn-success btn-lg btn-block\\\">I\\'m ready to see the doctor</button></div><div id=\\\"assistance\\\" class=\\\"panel panel-default\\\"><button type=\\\"button\\\" class=\\\"btn btn-warning btn-lg btn-block\\\">Help me</button></div><timer interval=\\\"1000\\\">{{minutes}} hour{{hoursS}}, {{seconds}} minute{{minutesS}}</timer><timer countdown=\\\"180\\\" interval=\\\"1000\\\"><div class=\\\"progress progress-striped active {{displayProgressActive}}\\\" style=\\\"height: 30px;\\\"><div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"70\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width:{{progressBar}}%\\\"></div></div></timer></div><app-footer></app-footer>\");\n$templateCache.put(\"app/modules/payer/payer.tpl.html\",\"<app-header></app-header><div class=\\\"container\\\"><div id=\\\"projectsList\\\" class=\\\"panel panel-default col-sm-12\\\"><h2>Today is April 10th 2016</h2></div><div id=\\\"projectsList\\\" class=\\\"panel panel-default col-sm-12\\\"><div class=\\\"panel-heading\\\">Community statistics</div><table><tr data-ng-repeat=\\\"item in ctrl.stats\\\" style=\\\"height:40px; background:#fff;border-bottom:thin solid #ccc !important;\\\"><td style=\\\"background:#fff;border:0px;\\\" class=\\\"input-group-addon\\\">{{item.min}}</td><td class=\\\"row\\\"><div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"{{item.value-5}}\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width:{{item.value-5}}%; height: 30px;background:#fff;border:0px; box-shadow:none;\\\"></div><div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"5\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width:5%; height: 30px;\\\"></div></td><td style=\\\"background:#fff;border:0px;\\\" class=\\\"input-group-addon\\\">{{item.max}}</td></tr></table></div></div><app-footer></app-footer>\");\n$templateCache.put(\"app/modules/projects/projects.tpl.html\",\"<app-header></app-header><div class=\\\"container\\\"><div id=\\\"projectsList\\\" class=\\\"panel panel-default col-sm-12\\\"><h2>Today is April 4th 2015</h2></div><div id=\\\"projectsList\\\" class=\\\"panel panel-default col-sm-6\\\"><div class=\\\"panel-heading\\\">Scheduled visit</div><div class=\\\"panel-body\\\"><ul class=\\\"nav nav-pills nav-stacked\\\"><li role=\\\"presentation\\\" data-ng-repeat=\\\"item in ctrl.projects | orderBy: [\\'order\\', \\'name\\']\\\"><a class=\\\"btn btn-default btn-lg\\\" data-ng-click=\\\"ctrl.selectProject(item)\\\" role=\\\"button\\\">{{item.name}}</a></li></ul></div></div><div id=\\\"id2\\\" class=\\\"panel panel-default col-sm-6\\\"><div class=\\\"panel-heading\\\">Overall patient flow</div><div class=\\\"panel-body\\\"><canvas id=\\\"line\\\" class=\\\"chart chart-line\\\" chart-data=\\\"data\\\" chart-labels=\\\"labels\\\" chart-legend=\\\"true\\\" chart-series=\\\"series\\\"></canvas></div></div><div id=\\\"id1\\\" class=\\\"panel panel-default col-sm-6\\\"><div class=\\\"panel-heading\\\">Ongoing visits</div><div class=\\\"panel-body\\\"><div><h4>Mr. David Jones</h4></div><div class=\\\"progress\\\"><div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"60\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width: 60%;\\\">60%</div></div></div></div><div id=\\\"id2\\\" class=\\\"panel panel-default col-sm-6\\\"><div class=\\\"panel-heading\\\">Patients queries</div><div class=\\\"panel-body\\\"><div><h4>Mrs. Amber Green <span class=\\\"badge\\\">1</span></h4></div><div><h4>Mr. Jonathan Little <span class=\\\"badge\\\">2</span></h4></div></div></div></div><app-footer></app-footer>\");\n$templateCache.put(\"app/modules/sign/sign.tpl.html\",\"<app-header></app-header><div class=\\\"container\\\" ng-init=\\\"vm.startVisit()\\\"><div class=\\\"panel panel-default\\\"><h2>Making decisions</h2><form role=\\\"form\\\"><div class=\\\"checkbox\\\"><input type=\\\"checkbox\\\" id=\\\"checkbox1\\\"> <label for=\\\"checkbox1\\\">Question 1</label></div><div class=\\\"checkbox\\\"><input type=\\\"checkbox\\\" id=\\\"checkbox2\\\"> <label for=\\\"checkbox2\\\">Question 2</label></div><div class=\\\"checkbox\\\"><input type=\\\"checkbox\\\" id=\\\"checkbox3\\\"> <label for=\\\"checkbox3\\\">Question 3</label></div><div class=\\\"textarea\\\"><label for=\\\"checkbox3\\\">Question 4</label> <textarea class=\\\"form-control\\\"></textarea></div><div class=\\\"textarea\\\"><label for=\\\"checkbox5\\\">Question 5</label><slider ng-model=\\\"sliders.sliderValue\\\" min=\\\"0\\\" step=\\\"1\\\" max=\\\"10\\\" value=\\\"4\\\"></slider></div></form></div><div id=\\\"signature\\\" class=\\\"panel\\\"><div class=\\\"modal-header\\\"><h3 class=\\\"modal-title\\\">Sign</h3></div><div class=\\\"modal-body\\\"><signature-pad accept=\\\"accept\\\" clear=\\\"clear\\\"></signature-pad></div><div class=\\\"modal-footer\\\"><button class=\\\"btn btn-default pull-left\\\" ng-click=\\\"clear()\\\">Clear signature</button></div></div><div id=\\\"visit\\\" class=\\\"panel panel-default\\\"><button type=\\\"button\\\" class=\\\"btn btn-success btn-lg btn-block\\\">I\\'m ready to see the doctor</button></div><div id=\\\"assistance\\\" class=\\\"panel panel-default\\\"><button type=\\\"button\\\" class=\\\"btn btn-warning btn-lg btn-block\\\">Help me</button></div><timer interval=\\\"1000\\\">{{minutes}} hour{{hoursS}}, {{seconds}} minute{{minutesS}}</timer><timer countdown=\\\"180\\\" interval=\\\"1000\\\"><div class=\\\"progress progress-striped active {{displayProgressActive}}\\\" style=\\\"height: 30px;\\\"><div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"70\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width:{{progressBar}}%\\\"></div></div></timer></div><app-footer></app-footer>\");\n$templateCache.put(\"app/modules/viewer/viewer.tool.tpl.html\",\"<div class=\\\"viewer-tool\\\" ng-show=\\\"ctrl.toolAccess\\\"><button class=\\\"btn btn-info\\\" ng-click=\\\"ctrl.getViewerSessionToken()\\\">{{\\'viewerTool.control.view\\' | translate}}</button><div id=\\\"viewer-tool-playground\\\"></div></div>\");\n$templateCache.put(\"app/modules/family/family.tpl.html\",\"<app-header></app-header><div class=\\\"container\\\"><div id=\\\"projectsList\\\" class=\\\"panel panel-default col-sm-12\\\"><h2>Today is April 10th 2016</h2></div><div id=\\\"projectsList\\\" class=\\\"panel panel-default col-sm-12\\\"><div class=\\\"panel-heading\\\">My relatives</div><div class=\\\"panel-body\\\"><ul class=\\\"nav nav-pills nav-stacked\\\"><li role=\\\"presentation\\\" data-ng-repeat=\\\"item in ctrl.projects | orderBy: [\\'order\\', \\'name\\']\\\"><a class=\\\"btn btn-default btn-lg\\\" data-ng-click=\\\"ctrl.selectProject(item)\\\" role=\\\"button\\\">{{item.name}} <span class=\\\"badge\\\" style=\\\"background:{{item.badgecolor}}\\\">{{item.badge}}</span></a></li></ul></div></div></div><app-footer></app-footer>\");}]);"],"sourceRoot":"/source/"}